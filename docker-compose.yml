services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mainote_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mainote_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Backend Service
  mainote-server:
    build:
      context: ./mainote_server
      dockerfile: ../extra/build/dockerfile/dev/Dockerfile.server
    container_name: mainote_server
    command: /app/scripts/development/start-go-dev.sh
    environment:
      - APP_PORT=${APP_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - ENVIRONMENT=development
      - SENTRY_DSN=${SENTRY_DSN:-}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./mainote_server:/app
      - ./scripts:/app/scripts
      - go_modules_cache:/go/pkg/mod
    networks:
      - mainote_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Flyway Database Migrations
  flyway:
    image: flyway/flyway:10.10.0
    container_name: mainote_flyway
    command: -url=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} -locations=filesystem:/flyway/sql migrate
    volumes:
      - ./db/sql:/flyway/sql
      - ./db/flyway.conf:/flyway/conf/flyway.conf
    networks:
      - mainote_network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - migration

  # Python Bot Service
  mainote-bot:
    build:
      context: .
      dockerfile: extra/build/dockerfile/dev/Dockerfile.bot
    container_name: mainote_bot
    command: /app/scripts/development/start-dev.sh
    environment:
      - PORT=${BOT_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - NOTION_API_KEY=${NOTION_API_KEY}
      - NOTION_DATABASE_ID=${NOTION_DATABASE_ID}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:${BOT_PORT}}
      - MORNING_NOTIFICATION_TIME=${MORNING_NOTIFICATION_TIME:-08:00}
      - NOTIFICATION_CHAT_IDS=${NOTIFICATION_CHAT_IDS:-}
      - ENABLE_MORNING_NOTIFICATIONS=${ENABLE_MORNING_NOTIFICATIONS:-true}
      - SENTRY_DSN=${SENTRY_DSN:-}
      - GO_BACKEND_URL=http://mainote-server:${APP_PORT}
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres:
        condition: service_healthy
      mainote-server:
        condition: service_started
    volumes:
      - .:/app
      - python_cache:/root/.cache
    networks:
      - mainote_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  go_modules_cache:
    driver: local
  python_cache:
    driver: local

networks:
  mainote_network:
    driver: bridge 