# Data Models / Schemas

# Core Note Entity
Note:
  type: object
  required:
    - id
    - chat_id
    - content
    - category
    - status
    - source
    - created_at
    - updated_at
  properties:
    id:
      type: string
      format: uuid
      description: Unique identifier for the note
      example: "550e8400-e29b-41d4-a716-446655440000"
      readOnly: true
    chat_id:
      type: string
      description: Telegram chat ID associated with the note
      example: "123456789"
      maxLength: 50
    content:
      type: string
      description: The main content/text of the note
      example: "Remember to buy groceries after work"
      minLength: 1
      maxLength: 10000
    title:
      type: string
      nullable: true
      description: Optional title for the note
      example: "Shopping List"
      maxLength: 500
    category:
      $ref: '#/NoteCategory'
    status:
      $ref: '#/NoteStatus'
    source:
      type: string
      description: Source of the note (e.g., 'text', 'voice', 'telegram_bot')
      example: "telegram_bot"
      default: "text"
      maxLength: 50
    metadata:
      type: object
      nullable: true
      description: Additional metadata in JSON format
      example:
        user_id: "user123"
        message_id: 42
        thread_id: "thread456"
      additionalProperties: true
    created_at:
      type: string
      format: date-time
      description: Timestamp when the note was created
      example: "2025-06-08T10:30:00Z"
      readOnly: true
    updated_at:
      type: string
      format: date-time
      description: Timestamp when the note was last updated
      example: "2025-06-08T10:30:00Z"
      readOnly: true

# Request Models
CreateNoteRequest:
  type: object
  required:
    - chat_id
    - content
    - category
  properties:
    chat_id:
      type: string
      description: Telegram chat ID associated with the note
      example: "123456789"
      maxLength: 50
    content:
      type: string
      description: The main content/text of the note
      example: "Remember to buy groceries after work"
      minLength: 1
      maxLength: 10000
    title:
      type: string
      nullable: true
      description: Optional title for the note
      example: "Shopping List"
      maxLength: 500
    category:
      $ref: '#/NoteCategory'
    source:
      type: string
      description: Source of the note
      example: "telegram_bot"
      maxLength: 50
    metadata:
      type: object
      nullable: true
      description: Additional metadata in JSON format
      additionalProperties: true
      example:
        user_id: "user123"
        message_id: 42

UpdateNoteRequest:
  type: object
  description: All fields are optional for partial updates
  properties:
    content:
      type: string
      description: The main content/text of the note
      example: "Updated note content"
      minLength: 1
      maxLength: 10000
    title:
      type: string
      nullable: true
      description: Optional title for the note
      example: "Updated Title"
      maxLength: 500
    category:
      $ref: '#/NoteCategory'
    status:
      $ref: '#/NoteStatus'
    metadata:
      type: object
      nullable: true
      description: Additional metadata in JSON format
      additionalProperties: true
      example:
        updated: true
        version: 2

# Response Models
NotesListResponse:
  type: object
  required:
    - notes
    - pagination
  properties:
    notes:
      type: array
      items:
        $ref: '#/Note'
      description: Array of notes
    pagination:
      $ref: '#/PaginationInfo'

PaginationInfo:
  type: object
  required:
    - total
    - limit
    - offset
    - has_more
  properties:
    total:
      type: integer
      description: Total number of notes matching the filter
      example: 150
      minimum: 0
    limit:
      type: integer
      description: Maximum number of notes per page
      example: 10
      minimum: 1
      maximum: 100
    offset:
      type: integer
      description: Number of notes skipped
      example: 0
      minimum: 0
    has_more:
      type: boolean
      description: Whether there are more notes available
      example: true

# Health Response
HealthResponse:
  type: object
  required:
    - status
    - timestamp
  properties:
    status:
      type: string
      enum: [healthy, unhealthy]
      description: Overall health status
      example: "healthy"
    timestamp:
      type: string
      format: date-time
      description: Timestamp of the health check
      example: "2025-06-08T10:30:00Z"
    version:
      type: string
      description: Application version
      example: "1.0.0"
    uptime:
      type: string
      description: Application uptime
      example: "2h 30m 15s"

# Error Response
ErrorResponse:
  type: object
  required:
    - error
    - message
    - timestamp
  properties:
    error:
      type: string
      description: Error type or category
      example: "validation_failed"
    message:
      type: string
      description: Human-readable error message
      example: "The content field is required"
    details:
      type: object
      nullable: true
      description: Additional error details
      additionalProperties: true
      example:
        field: "content"
        code: "required"
    timestamp:
      type: string
      format: date-time
      description: Timestamp when the error occurred
      example: "2025-06-08T10:30:00Z"

# Enums
NoteCategory:
  type: string
  enum:
    - idea
    - task
    - personal
  description: |
    Category of the note:
    * `idea` - Ideas, thoughts, inspirations
    * `task` - Tasks, to-dos, reminders
    * `personal` - Personal notes, diary entries
  example: "idea"

NoteStatus:
  type: string
  enum:
    - active
    - done
    - archived
  description: |
    Status of the note:
    * `active` - Active note (default)
    * `done` - Completed/finished note
    * `archived` - Archived/inactive note
  example: "active"
