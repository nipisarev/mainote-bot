// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Mainote Server API
 *
 * REST API for Mainote Server - a note management service.  This API provides CRUD operations for managing notes with support for: - Creating, reading, updating, and deleting notes - Filtering by category, status, and chat ID - Pagination for large result sets - Rich metadata support using JSON  ## Authentication Currently no authentication is required (development mode).  ## Rate Limiting No rate limiting is currently implemented. 
 *
 * API version: 1.0.0
 * Contact: support@mainote.com
 */

package private


import (
	"fmt"
)


// NoteStatus : Status of the note: * `active` - Active note (default) * `done` - Completed/finished note * `archived` - Archived/inactive note 
type NoteStatus string

// List of NoteStatus
const (
	ACTIVE NoteStatus = "active"
	DONE NoteStatus = "done"
	ARCHIVED NoteStatus = "archived"
)

// AllowedNoteStatusEnumValues is all the allowed values of NoteStatus enum
var AllowedNoteStatusEnumValues = []NoteStatus{
	"active",
	"done",
	"archived",
}

// validNoteStatusEnumValue provides a map of NoteStatuss for fast verification of use input
var validNoteStatusEnumValues = map[NoteStatus]struct{}{
	"active": {},
	"done": {},
	"archived": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NoteStatus) IsValid() bool {
	_, ok := validNoteStatusEnumValues[v]
	return ok
}

// NewNoteStatusFromValue returns a pointer to a valid NoteStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNoteStatusFromValue(v string) (NoteStatus, error) {
	ev := NoteStatus(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for NoteStatus: valid values are %v", v, AllowedNoteStatusEnumValues)
}



// AssertNoteStatusRequired checks if the required fields are not zero-ed
func AssertNoteStatusRequired(obj NoteStatus) error {
	return nil
}

// AssertNoteStatusConstraints checks if the values respects the defined constraints
func AssertNoteStatusConstraints(obj NoteStatus) error {
	return nil
}
