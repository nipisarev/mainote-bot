// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Mainote Server API
 *
 * REST API for Mainote Server - a note management service.  This API provides CRUD operations for managing notes with support for: - Creating, reading, updating, and deleting notes - Filtering by category, status, and chat ID - Pagination for large result sets - Rich metadata support using JSON  ## Authentication Currently no authentication is required (development mode).  ## Rate Limiting No rate limiting is currently implemented. 
 *
 * API version: 1.0.0
 * Contact: support@mainote.com
 */

package api


import (
	"fmt"
)


// NoteCategory : Category of the note: * `idea` - Ideas, thoughts, inspirations * `task` - Tasks, to-dos, reminders * `personal` - Personal notes, diary entries 
type NoteCategory string

// List of NoteCategory
const (
	IDEA NoteCategory = "idea"
	TASK NoteCategory = "task"
	PERSONAL NoteCategory = "personal"
)

// AllowedNoteCategoryEnumValues is all the allowed values of NoteCategory enum
var AllowedNoteCategoryEnumValues = []NoteCategory{
	"idea",
	"task",
	"personal",
}

// validNoteCategoryEnumValue provides a map of NoteCategorys for fast verification of use input
var validNoteCategoryEnumValues = map[NoteCategory]struct{}{
	"idea": {},
	"task": {},
	"personal": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NoteCategory) IsValid() bool {
	_, ok := validNoteCategoryEnumValues[v]
	return ok
}

// NewNoteCategoryFromValue returns a pointer to a valid NoteCategory
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNoteCategoryFromValue(v string) (NoteCategory, error) {
	ev := NoteCategory(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for NoteCategory: valid values are %v", v, AllowedNoteCategoryEnumValues)
}



// AssertNoteCategoryRequired checks if the required fields are not zero-ed
func AssertNoteCategoryRequired(obj NoteCategory) error {
	return nil
}

// AssertNoteCategoryConstraints checks if the values respects the defined constraints
func AssertNoteCategoryConstraints(obj NoteCategory) error {
	return nil
}
